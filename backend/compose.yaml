services:
  api:
    build:
      context: .
      args:
        ENV: ${ENV:-dev}
    depends_on:
      - db
      - redis
    restart: always
    ports:
      - "8080:8080"
    environment:
      - ENV_DIR=/run/secrets
    secrets:
      - base.env
    volumes:
      - ./cmd/migrate/migrations:/migrations
      - $HOME/.aws:/root/.aws:ro
  db:
    image: postgres:12.19-alpine3.20
    restart: always
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postresql/data
    environment:
      - POSTGRES_DB=db
      - POSTGRES_USER_FILE=/run/secrets/postgres_user
      - POSTGRES_PASSWORD_FILE=/run/secrets/postgres_password
    secrets:
      - postgres_user
      - postgres_password
  redis:
    image: redis:alpine3.20

  adminer:
    profiles:
      - debug
    depends_on:
      - db
    image: adminer
    restart: always
    ports:
      - "8081:8080"
  redisinsight:
    profiles:
      - debug
    depends_on:
      - redis
    image: redislabs/redisinsight
    ports:
      - "5540:5540"

secrets:
  base.env:
    file: ./base.env
  postgres_user:
    file: ./postgres_user.secret
  postgres_password:
    file: ./postgres_password.secret
  aws_creds:
    file: $HOME/.aws/credentials
  aws_cfg:
    file: $HOME/.aws/config

volumes:
  pgdata:
